import requests
from fake_headers import Headers

class LfiScanner:

    def __del__(self):
        if not self.quiet:
            print("[*] Basic LFI scan completed")

    def __init__(self, quiet, url):
        self.quiet = quiet
        self.url = url
        self.header = Headers(
            headers=True  # for misc headers
        )
        self.ses = requests.Session()

    def basic_scan_host(self, report):
        url_args = ['index.php?page=', 'index.php?Page=', 'index.php?id=',
                    'index.php?addr=''layout.php?page=', 'layout.php?Page=',
                    'layout.php?id=', 'layout.php?addr=']

        if not self.quiet:
            print("[*] Performing basic LFI scan")

        for arg in url_args:
            self.ses.headers = self.header.generate()
            with open("payloads/LFI_short.txt", "r") as f:
                for line in f:
                    payload = line.strip()
                    url_try = self.url + "/" + arg + payload
                    req = self.ses.get(url_try)
                    if "root" in req.content.decode('utf-8'):
                        report.write_to_report("Found LFI vulnerability, path: " + url_try)
                        if not self.quiet:
                            print("[-] LFI vulnerability found")

    def advanced_lfi(self, report):
        if not self.quiet:
            print("[*] Performing advances LFI scan on extra URL")
        report.write_to_line("\n [*****] Performing LFI scan on extra URL [*****] \n \n")
        # Perform LFI check with special url
        with open("lfi_payload.txt", "r") as f:
            for line in f:
                self.ses.headers = self.header.generate()
                payload = line.strip()
                url_try = self.url + payload
                req = self.ses.get(url_try)
                if "root" in req.content.decode('utf-8') or "mail" in req.content.decode('utf-8'):
                    report.write_to_line("Found LFI vulnerability, path: " + url_try)
                    if not self.quiet:
                        print("[-] LFI vulnerability found")
